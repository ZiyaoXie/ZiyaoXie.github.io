<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go-Resty on 提笔忘字</title><link>https://imx.ink/go-resty/</link><description>Recent content in Go-Resty on 提笔忘字</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>Copyright © 2023, Xie Ziyao.</copyright><lastBuildDate>Mon, 12 Jun 2023 15:49:00 +0800</lastBuildDate><atom:link href="https://imx.ink/go-resty/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang 工具：第三方 http 库 go-resty</title><link>https://imx.ink/tech/2023/06/12/golang-third-party-go-resty/</link><pubDate>Mon, 12 Jun 2023 15:49:00 +0800</pubDate><guid>https://imx.ink/tech/2023/06/12/golang-third-party-go-resty/</guid><description>golang 里的 http 标准库，发起 http 请求时，写法比较繁琐；这里介绍一个好用的第三方 http 库：go-resty 。
go-resty 有很多特性：
发起 GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS, etc. 请求 简单的链式书写 自动解析 JSON 和 XML 类型的文档 上传文件 重试功能 客户端测试功能 Resty client Custom Root Certificates and Client Certificates &amp;hellip; go-resty 更多功能特性请查看文档：go-resty features，本文编写的示例基于 go-resty: v2.3.0。
简单的 GET package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/go-resty/resty/v2&amp;#34; ) func main() { client := resty.New() // 创建一个restry客户端 resp, err := client.R().EnableTrace().Get(&amp;#34;https://httpbin.org/get&amp;#34;) // Explore response object fmt.Println(&amp;#34;Response Info:&amp;#34;) fmt.</description></item></channel></rss>